
variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  DOCKER_REGISTRY: "registry.gitlab.com"
  DOCKER_IMAGE_TAG: "$CI_REGISTRY_IMAGE"

cache:
  paths:
    - .m2/repository/

stages:
  - build
  - test
  - package
  - deploy

before_script:
  - echo "Starting CI/CD Pipeline for E-commerce Platform"

build:
  stage: build
  image: maven:3.8.4-openjdk-17
  script:
    - mvn $MAVEN_CLI_OPTS clean compile
  artifacts:
    paths:
      - target/
    expire_in: 1 hour

test:
  stage: test
  image: maven:3.8.4-openjdk-17
  script:
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
    paths:
      - "*/target/surefire-reports/"
    expire_in: 1 day

package_service_registry:
  stage: package
  image: maven:3.8.4-openjdk-17
  script:
    - mvn $MAVEN_CLI_OPTS -pl service-registry clean package -DskipTests
    - docker build -t $DOCKER_IMAGE_TAG/service-registry:$CI_COMMIT_SHA ./service-registry
    - docker push $DOCKER_IMAGE_TAG/service-registry:$CI_COMMIT_SHA
  only:
    - main
    - develop

package_api_gateway:
  stage: package
  image: maven:3.8.4-openjdk-17
  script:
    - mvn $MAVEN_CLI_OPTS -pl api-gateway clean package -DskipTests
    - docker build -t $DOCKER_IMAGE_TAG/api-gateway:$CI_COMMIT_SHA ./api-gateway
    - docker push $DOCKER_IMAGE_TAG/api-gateway:$CI_COMMIT_SHA
  only:
    - main
    - develop

package_product_service:
  stage: package
  image: maven:3.8.4-openjdk-17
  script:
    - mvn $MAVEN_CLI_OPTS -pl product-service clean package -DskipTests
    - docker build -t $DOCKER_IMAGE_TAG/product-service:$CI_COMMIT_SHA ./product-service
    - docker push $DOCKER_IMAGE_TAG/product-service:$CI_COMMIT_SHA
  only:
    - main
    - develop

package_order_service:
  stage: package
  image: maven:3.8.4-openjdk-17
  script:
    - mvn $MAVEN_CLI_OPTS -pl order-service clean package -DskipTests
    - docker build -t $DOCKER_IMAGE_TAG/order-service:$CI_COMMIT_SHA ./order-service
    - docker push $DOCKER_IMAGE_TAG/order-service:$CI_COMMIT_SHA
  only:
    - main
    - develop

package_inventory_service:
  stage: package
  image: maven:3.8.4-openjdk-17
  script:
    - mvn $MAVEN_CLI_OPTS -pl inventory-service clean package -DskipTests
    - docker build -t $DOCKER_IMAGE_TAG/inventory-service:$CI_COMMIT_SHA ./inventory-service
    - docker push $DOCKER_IMAGE_TAG/inventory-service:$CI_COMMIT_SHA
  only:
    - main
    - develop

# package_notification_service:
#   stage: package
#   image: maven:3.8.4-openjdk-17
#   script:
#     - mvn $MAVEN_CLI_OPTS -pl notification-service clean package -DskipTests
#     - docker build -t $DOCKER_IMAGE_TAG/notification-service:$CI_COMMIT_SHA ./notification-service
#     - docker push $DOCKER_IMAGE_TAG/notification-service:$CI_COMMIT_SHA
#   only:
#     - main
#     - develop

# package_auth_server:
#   stage: package
#   image: maven:3.8.4-openjdk-17
#   script:
#     - mvn $MAVEN_CLI_OPTS -pl auth-server clean package -DskipTests
#     - docker build -t $DOCKER_IMAGE_TAG/auth-server:$CI_COMMIT_SHA ./auth-server
#     - docker push $DOCKER_IMAGE_TAG/auth-server:$CI_COMMIT_SHA
#   only:
#     - main
#     - develop

# package_config_server:
#   stage: package
#   image: maven:3.8.4-openjdk-17
#   script:
#     - mvn $MAVEN_CLI_OPTS -pl config-server clean package -DskipTests
#     - docker build -t $DOCKER_IMAGE_TAG/config-server:$CI_COMMIT_SHA ./config-server
#     - docker push $DOCKER_IMAGE_TAG/config-server:$CI_COMMIT_SHA
#   only:
#     - main
#     - develop

deploy_to_staging:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - echo "Deploying to staging environment"
    - kubectl config use-context $KUBE_CONTEXT_STAGING
    - kubectl apply -f kubernetes/
    - kubectl set image deployment/service-registry service-registry=$DOCKER_IMAGE_TAG/service-registry:$CI_COMMIT_SHA
    - kubectl set image deployment/api-gateway api-gateway=$DOCKER_IMAGE_TAG/api-gateway:$CI_COMMIT_SHA
    - kubectl set image deployment/product-service product-service=$DOCKER_IMAGE_TAG/product-service:$CI_COMMIT_SHA
    - kubectl set image deployment/order-service order-service=$DOCKER_IMAGE_TAG/order-service:$CI_COMMIT_SHA
    - kubectl set image deployment/inventory-service inventory-service=$DOCKER_IMAGE_TAG/inventory-service:$CI_COMMIT_SHA
    # - kubectl set image deployment/notification-service notification-service=$DOCKER_IMAGE_TAG/notification-service:$CI_COMMIT_SHA
    # - kubectl set image deployment/auth-server auth-server=$DOCKER_IMAGE_TAG/auth-server:$CI_COMMIT_SHA
    # - kubectl set image deployment/config-server config-server=$DOCKER_IMAGE_TAG/config-server:$CI_COMMIT_SHA
    - kubectl rollout status deployment/service-registry
    - kubectl rollout status deployment/api-gateway
    - kubectl rollout status deployment/product-service
    - kubectl rollout status deployment/order-service
    - kubectl rollout status deployment/inventory-service
    # - kubectl rollout status deployment/notification-service
    # - kubectl rollout status deployment/auth-server
    # - kubectl rollout status deployment/config-server
  environment:
    name: staging
  only:
    - develop

deploy_to_production:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - echo "Deploying to production environment"
    - kubectl config use-context $KUBE_CONTEXT_PRODUCTION
    - kubectl apply -f kubernetes/
    - kubectl set image deployment/service-registry service-registry=$DOCKER_IMAGE_TAG/service-registry:$CI_COMMIT_SHA
    - kubectl set image deployment/api-gateway api-gateway=$DOCKER_IMAGE_TAG/api-gateway:$CI_COMMIT_SHA
    - kubectl set image deployment/product-service product-service=$DOCKER_IMAGE_TAG/product-service:$CI_COMMIT_SHA
    - kubectl set image deployment/order-service order-service=$DOCKER_IMAGE_TAG/order-service:$CI_COMMIT_SHA
    - kubectl set image deployment/inventory-service inventory-service=$DOCKER_IMAGE_TAG/inventory-service:$CI_COMMIT_SHA
    # - kubectl set image deployment/notification-service notification-service=$DOCKER_IMAGE_TAG/notification-service:$CI_COMMIT_SHA
    # - kubectl set image deployment/auth-server auth-server=$DOCKER_IMAGE_TAG/auth-server:$CI_COMMIT_SHA
    # - kubectl set image deployment/config-server config-server=$DOCKER_IMAGE_TAG/config-server:$CI_COMMIT_SHA
    - kubectl rollout status deployment/service-registry
    - kubectl rollout status deployment/api-gateway
    - kubectl rollout status deployment/product-service
    - kubectl rollout status deployment/order-service
    - kubectl rollout status deployment/inventory-service
  #   - kubectl rollout status deployment/notification-service
  #   - kubectl rollout status deployment/auth-server
  #   - kubectl rollout status deployment/config-server
  environment:
    name: production
  when: manual
  only:
    - main
